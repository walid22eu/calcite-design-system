const fs = require("fs");
const path = require("path");

const basePath = path.normalize(`${__dirname}/../src/components/`);

async function isCalciteComponent(entry): Promise<boolean> {
  if (!entry.isDirectory()) {
    return false;
  }
  const files = await fs.promises.readdir(path.join(basePath, entry.name));
  return files?.includes(`${entry.name}.tsx`);
}

(async function () {
  const stylePath = path.normalize(`${__dirname}/../src/assets/styles/_hydration.scss`);
  const components = await fs.promises.readdir(basePath, { withFileTypes: true });
  const selectors = components.filter(isCalciteComponent).map(({ name }) => `calcite-${name}:not([calcite-hydrated])`);
  const fileContents = `// generated by support/hydrationStyles.ts
${selectors.join(",\n")} {
  visibility: hidden;
  pointer-events: none;
}`;
  await fs.promises.writeFile(stylePath, fileContents);
  process.exit(0);
})();
