name: Add Esri Product Label
on:
  issues:
    types: [opened, edited]
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const {
              repo: { owner, repo },
              payload: {
                action,
                issue: { body, labels: currentLabels, number: issue_number },
              },
            } = context;

            if (!body) {
              console.log("could not determine the issue body");
              return;
            }

            const productRegex = new RegExp(
              action === "edited"
                ? // the way GitHub parses the issue body into plaintext
                  // requires this exact format for edits
                  "(?<=### Esri team\r\n\r\n).+"
                : // otherwise it depends on the submitter's OS
                  "(?<=### Esri team[\r\n|\r|\n]{2}).+$",
              "m"
            );

            const productRegexMatch = body.match(productRegex);

            const product = (
              productRegexMatch && productRegexMatch[0] ? productRegexMatch[0] : ""
            ).trim();

            if (product && product !== "N/A") {
              /** Creates a label if it does not exist */
              try {
                await github.rest.issues.getLabel({
                  owner,
                  repo,
                  name: product,
                });
              } catch (e) {
                await github.rest.issues.createLabel({
                  owner,
                  repo,
                  name: product,
                  color: "006B75",
                  description: `Issues logged by ${product} team members.`,
                });
              }

              /** remove any existing product label(s) */
              const existingProductLabels = currentLabels
                .filter((l) => /Issues logged by/.test(l.description))
                .map((l) => l.name)
                .forEach(
                  async (name) =>
                    await github.rest.issues.removeLabel({
                      issue_number,
                      owner,
                      repo,
                      name,
                    })
                );

              /** add new product label */
              await github.rest.issues.addLabels({
                issue_number,
                owner,
                repo,
                labels: [product],
              });
            }
