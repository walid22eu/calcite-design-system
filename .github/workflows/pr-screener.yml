name: Screener
on:
  workflow_dispatch:
  pull_request:
    branches: [master]
    types: [labeled, synchronize, ready_for_review]
  # need to run on the base branch when merging to keep the baseline state up to date
  push:
    branches: [master]
jobs:
  screenshot_tests:
    if: "(github.event.action == 'ready_for_review' && contains(github.event.pull_request.labels.*.name, 'pr ready for visual snapshots')) || (github.event.action == 'labeled' && github.event.label.name == 'pr ready for visual snapshots' && github.event.pull_request.draft == false) || github.event.action == 'push'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: skip for markdown only prs
        id: one
        run: |
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          echo "branch: $current_branch"
          if [ "$current_branch" == "master" ]; then
            # diff of last commit excluding md (assumes squash merge)
            screenable_changes=$(git diff --name-only @~..@ -- . ':(exclude)*.md*')
            echo "push run"
          else
            # diff of branch excluding md
            screenable_changes=$(git diff --name-only "$current_branch" $(git merge-base "$current_branch" origin/master) -- . ':(exclude)*.md*')
            echo "pr run"
          fi
          echo "changed files: $screenable_changes"
          # skip if there are only md changes
          if [ -z "$screenable_changes" ]; then
            echo "skip screener"
            echo "::set-output name=skip::skip"
          else
            echo "run screener"
            echo "::set-output name=skip::screen"
          fi
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci --legacy-peer-deps
      - if: steps.one.outputs.skip == 'screen'
        name: run screener check
        env:
          SCREENER_API_KEY: ${{ secrets.SCREENER_API_KEY }}
          COMMIT_SHA: ${{github.event.pull_request.head.sha || github.sha}}
          SAUCE_ACCESS_NAME: ${{ secrets.SAUCE_ACCESS_NAME}}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          STORYBOOK_SCREENSHOT_TEST_BUILD: true
        run: npm run test:storybook || true
      - if: steps.one.outputs.skip == 'skip'
        name: skip screener for markdown PRs
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: screener
          description: Screener run skipped (markdown PR)
          state: success
          sha: ${{github.event.pull_request.head.sha || github.sha}}
  skip_screenshot_tests:
    if: "(github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'pr ready for visual snapshots')) || github.event.pull_request.draft == true || (github.actor == 'dependabot-preview[bot]' && github.event.action != 'labeled')"
    runs-on: ubuntu-latest
    steps:
      - name: skip screener for dependabot PRs or no visual changes
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: screener
          description: Screener run skipped (not ready for snapshots or dependabot PR)
          state: success
          sha: ${{github.event.pull_request.head.sha || github.sha}}
