name: Add Bug Priority Label
on:
  issues:
    types: [opened, edited]
jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const {
              repo: { owner, repo },
              payload: {
                action,
                issue: { body, labels: currentLabels, number: issue_number },
              },
            } = context;

            if (!body) {
              console.log("could not determine the issue body");
              return;
            }

            const bugPriorityRegex = new RegExp(
              action === "edited"
                ? // the way GitHub parses the issue body into plaintext
                  // requires this exact format for edits
                  "(?<=### Priority impact\r\n\r\n).+"
                : // otherwise it depends on the submitter's OS
                  "(?<=### Priority impact[\r\n|\r|\n]{2}).+$",
              "m"
            );

            const bugPriorityRegexMatch = body.match(bugPriorityRegex);

            const bugPriority = (
              bugPriorityRegexMatch && bugPriorityRegexMatch[0] ? bugPriorityRegexMatch[0] : ""
            ).trim();

            if (bugPriority && bugPriority !== "N/A") {
              /** Creates a label if it does not exist */
              try {
                await github.rest.issues.getLabel({
                  owner,
                  repo,
                  name: bugPriority,
                });
              } catch (error) {
                await github.rest.issues.createLabel({
                  owner,
                  repo,
                  name: bugPriority,
                  color: "bb7fe0",
                  description: `User set priority status of ${bugPriority}`,
                });
              }

              /** add new bug priority label */
              await github.rest.issues.addLabels({
                issue_number,
                owner,
                repo,
                labels: [bugPriority],
              });
            }
