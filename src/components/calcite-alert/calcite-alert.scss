:host {
  position: relative;
  justify-content: center;
  right: 0;
  left: 0;
  margin-right: auto;
  margin-left: auto;
  z-index: 100;
  width: 50em;
  max-width: 90%;
  border-radius: 2px;
  background-color: $blk-000;
  box-shadow: 0 0 12px 0 rgba($blk-240, 0.15);
  height: 0;
  opacity: 0;
  overflow: visible;
  display: flex;
  border-top: 3px solid;
  transition: visibility 0ms linear 300ms, opacity 300ms $easing-function, all .15s ease-in-out;
  transform: translate3d(0, $baseline, 0);
  pointer-events: none;
  border-width: 0px;

  @media only screen and (max-width: 600px) {
    max-width: 100%;
    border-radius: 2px 2px 0 0;
    box-shadow: 0 -6px 12px 0 rgba($blk-240, 0.15);
  }
}

:host([is-active]) {
  visibility: visible;
  border-width: 3px;
  opacity: 1;
  height: 100%;
  transition-delay: 300ms;
  transform: translate3d(0, 0, 0);
  pointer-events: initial;
}

:host slot[name=alert-title]::slotted(div) {
  display: block;
  font-weight: 500;
  font-size: 16px;
}

:host slot[name=alert-link]::slotted(a) {
  display: inline-block;
  font-size: 15px;
  color: $h-bb-060;
}

:host slot[name=alert-message]::slotted(div) {
  font-size: 15px;
  color: $blk-160;
  display: inline;
  margin-inline-end: $baseline/2;
}

:host([theme="dark"]) {
  background-color: $darkest-gray;
}

:host([theme="dark"]) slot[name=alert-title]::slotted(div) {
  color: $blk-005;
}

:host([theme="dark"]) slot[name=alert-message]::slotted(div) {
  color: $blk-010;
}

@mixin alert-color($color) {
  border-top-color: $color;

  & .alert-icon svg {
    fill: $color;
  }
}

@mixin alert-element-base() {
  padding: $baseline/2 $baseline;
  flex: 0 0 auto;
  transition-delay: 300ms;
  transition: all .15s ease-in-out;

  @media only screen and (max-width: 600px) {
    padding: $baseline;
  }

  & svg {
    position: relative;
    vertical-align: top;
    height: 16px;
    width: 16px;
  }
}

.alert-content {
  @include alert-element-base;
  flex: 1 1 auto;
  min-width: 0;
  word-wrap: break-word;
  padding-block-start: $baseline/2;
  padding-block-end: $baseline/2;
  padding-inline-end: $baseline/2;
  padding-inline-start: 0;

  &:first-of-type {
    padding-inline-start: $baseline;
  }

  @media only screen and (max-width: 600px) {
    padding-block-start: $baseline;
    padding-block-end: $baseline;
    padding-inline-end: $baseline/2;
    padding-inline-start: 0;
  }
}

.alert-icon {
  @include alert-element-base;
  display: flex;
  align-items: center;
}

.alert-close {
  @include alert-element-base;
  -webkit-appearance: none;
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
  border-radius: 0 0 2px 0;

  & svg {
    fill: $blk-220;
  }
  &:hover, &:focus {
    background-color: $blk-010;
  }
  &:active {
    background-color: $blk-020;
  }
  &:last-child {
    border-radius: 0 0 2px 0;

    :host([dir="rtl"]) & {
      border-radius: 0 0 0 2px;
    }
  }

  @media only screen and (max-width: 600px) {
    border-radius: 0;
  }
}

:host([theme="dark"]) .alert-close {
  & svg {
    fill: $blk-040;
  }

  &:hover, &:focus {
    background-color: $blk-210;
  }

  &:active {
    background-color: $blk-220;
  }
}

.alert-count {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  transition: all .15s ease-in;
  width: 0;
  font-size: 14px;
  visibility: hidden;
  padding: 0;
  font-weight: 500;
  text-align: center;
  background-color: transparent;
  color: $gray;
  opacity: 0;
  border-left: 1px solid transparent;
  border-right: 1px solid transparent;
  cursor: default;

  &.is-active {
    visibility: visible;
    transition-delay: 300ms;
    opacity: 1;
    padding: 0 $baseline/4;
    width: $baseline*2;
    border-left: 1px solid $lightest-gray;
    border-right: 1px solid $lightest-gray;

    &:last-child {
      border-right-color: transparent;
    }
  }
  @media only screen and (max-width: 600px) {
    border-radius: 0;
  }
}

:host([theme="dark"]) .alert-count {
  color: $blk-040;
  &.is-active {
    border-left: 1px solid $blk-210;
    border-right: 1px solid $blk-210;
  }
}

.alert-dismiss {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  top: 0;
  height: 3px;
  z-index: 101;

  &:after {
    height: 3px;
    top: -3px;
    right: 0;
    display: block;
    position: absolute;
    border-radius: 2px 2px 0 0;
    content: '';
    width: 50%;
    background-color: rgba($white, 0.6);
    animation: dismissProgress 10000ms linear;
    transition: all .15s ease-in-out;
    z-index: 200;
  }
}

:host([theme="dark"]) .alert-dismiss:after {
  background-color: rgba($darkest-gray, 0.6);
}
:host([duration="fast"]) .alert-dismiss:after {
  animation: dismissProgress 6000ms linear;
}

:host([duration="medium"]) .alert-dismiss:after {
  animation: dismissProgress 10000ms linear;
}

:host([duration="slow"]) .alert-dismiss:after {
  animation: dismissProgress 14000ms linear;
}

@keyframes dismissProgress {
  0% {
    width: 0;
    opacity: 0
  }
  100% {
    width: 100%;
    opacity: 1;
  }
}

$alertColors: 'blue'$h-bb-060,
'red'$h-rr-060,
'yellow'$h-yy-060,
'green'$h-gg-060;

@each $alertColor in $alertColors {
  $name: nth($alertColor, 1);
  $color: nth($alertColor, 2);

  :host([color="#{$name}"]) {
    @include alert-color($color);
  }
}
