$loader-size-small: 32;
$loader-size-medium: 56;
$loader-size-large: 80;

$loader-size-small-inline: 12;
$loader-size-medium-inline: 16;
$loader-size-large-inline: 20;

$loader-scale: 56;
$stroke-width: 3;
$stroke-width-inline: 2;
$loader-padding: 4rem;
$loader-circumference: ($loader-scale - (2 * $stroke-width)) * 3.14159;

/**
  Segment variables
  - size      length of the segment (0 - 100)
  - growth    how much the segment grows during the animation
              (size + growth should not exceed 100)
  - duration  how long the segment takes to rotate 360Â° (seconds)
*/
$segment-1-size: 10;
$segment-1-growth: 40;
$segment-1-duration: .72s;
$segment-2-size: 20;
$segment-2-growth: 30;
$segment-2-duration: .96s;
$segment-3-size: 5;
$segment-3-growth: 45;
$segment-3-duration: 1.16s;

:host {
  align-items: center;
  justify-content: center;
  position: relative;
  display: none;
  padding-bottom: $loader-padding;
  padding-top: $loader-padding;
  margin-left: auto;
  margin-right: auto;
  min-height: var(--loader-size);
  stroke: var(--calcite-ui-blue-1);
  stroke-width: $stroke-width;
  fill: none;
  opacity: 1;
  transform: scale(1, 1);
  animation: loader-color-shift 6s alternate-reverse infinite linear;
}

:host([scale="s"]) {
  --loader-size: #{ $loader-size-small + 1 }px;
  --loader-size-inline: #{ $loader-size-small-inline + 1 }px;
  @include font-size(-3);
}
:host([scale="m"]) {
  --loader-size: #{ $loader-size-medium + 1 }px;
  --loader-size-inline: #{ $loader-size-medium-inline + 1 }px;
  @include font-size(-2);
}
:host([scale="l"]) {
  --loader-size: #{ $loader-size-large + 1 }px;
  --loader-size-inline: #{ $loader-size-large-inline + 1 }px;
  @include font-size(-1);
}

:host([no-padding]) {
  padding-top: 0;
  padding-bottom: 0;
}

:host([active]) {
  display: flex;
}

.loader__text {
  display: block;
  margin-top: calc(var(--loader-size) + 1rem);//$loader-padding + 1rem;
  text-align: center;
}

.loader__percentage {
  display: block;
  width: var(--loader-size);
  position: absolute;
  top: $loader-padding;
  left: 50%;
  margin-left: calc(var(--loader-size) / 2 * -1);
  margin-top: calc(var(--loader-size) / 2);
  text-align: center;
  color: var(--calcite-ui-text-1);
  line-height: 0.25;
  transform: scale(1, 1);
}

.loader__svgs {
  width: var(--loader-size);
  height: var(--loader-size);
  position: absolute;
  top: $loader-padding;
  left: 50%;
  margin-left: calc(var(--loader-size) / 2 * -1);
  overflow: visible;
  opacity: 1;
  transform: scale(1, 1);
}

.loader__svg {
  width: var(--loader-size);
  height: var(--loader-size);
  position: absolute;
  top: 0;
  left: 0;
  overflow: visible;
  transform-origin: center;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  // by default the animation is rotation for ie. and edge
  animation-name: loader-clockwise;
}

// in newer browsers use the stroke-dash-offset animation as it looks better
@supports (display: grid) {
  .loader__svg--1 { animation-name: loader-offset-1; }
  .loader__svg--2 { animation-name: loader-offset-2; }
  .loader__svg--3 { animation-name: loader-offset-3; }
}

:host([type="determinate"]) {
  stroke: var(--calcite-ui-border-3);
  animation: none;
  .loader__svg--3 {
    stroke: var(--calcite-ui-blue-1);
    stroke-dasharray: $loader-circumference; // CHECK ME
    transform: rotate(-90deg);
    animation: none;
    transition: all 100ms linear;
  }
}

:host([inline]) {
  stroke: currentColor;
  stroke-width: $stroke-width-inline;
  animation: none;
  margin: 0;
  padding-bottom: 0;
  padding-top: 0;
  position: relative;
  height: var(--loader-size-inline);
  min-height: var(--loader-size-inline);
  width: var(--loader-size-inline);
  margin-right: var(--loader-size-inline) / 2;
  vertical-align: -var(--loader-size-inline) / 5;
}

:host([inline][dir="rtl"]) {
  margin-left: var(--loader-size-inline) / 2;
  margin-right: 0;
}

:host([active][inline]) {
  display: inline-block;
}

:host([inline]) .loader__svgs {
  top: 0;
  left: 0;
  margin: 0;
  width: var(--loader-size-inline);
  height: var(--loader-size-inline);
}

:host([inline]) .loader__svg {
  width: var(--loader-size-inline);
  height: var(--loader-size-inline);
}

:host([complete]) {
  opacity: 0;
  transform: scale(.75, .75);
  transform-origin: center;
  transition: opacity 200ms linear 1000ms, transform 200ms linear 1000ms;
}

:host([complete]) .loader__svgs {
  opacity: 0;
  transform: scale(.75, .75);
  transform-origin: center;
  transition: opacity 180ms linear 800ms, transform 180ms linear 800ms;
}

:host([complete]) .loader__percentage {
  color: var(--calcite-ui-blue-1);
  transform: scale(1.075, 1.075);
  transform-origin: center;
  transition: color 200ms linear, transform 200ms linear;
}

@mixin generateSegment($i, $size, $growth, $duration) {
  $circumference: $loader-circumference / $loader-scale * 100%;
  $length: ($size / 100) * $circumference;
  $end: $length + ($growth / 100) * $circumference;
  .loader__svg--#{$i} {
    stroke-dasharray: $length $circumference - $end;
    animation-duration: $duration;
  }
  @keyframes loader-offset-#{$i} {
    0% {
      stroke-dasharray: $length $circumference - $length;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: $end $circumference - $end;
      stroke-dashoffset: -$circumference / 2 - ($length - $end) / 2;
    }
    100% {
      stroke-dasharray: $length $circumference - $length;
      stroke-dashoffset: -$circumference;
    }
  }
}

@include generateSegment(1, $segment-1-size, $segment-1-growth, $segment-1-duration);
@include generateSegment(2, $segment-2-size, $segment-2-growth, $segment-2-duration);
@include generateSegment(3, $segment-3-size, $segment-3-growth, $segment-3-duration);

@keyframes loader-color-shift {
  0% {
    stroke: var(--calcite-ui-blue-1);
  }
  33% {
    stroke: var(--calcite-ui-blue-3);
  }
  66% {
    stroke: var(--calcite-ui-blue-2);
  }
  100% {
    stroke: var(--calcite-ui-blue-1);
  }
}

@keyframes loader-clockwise {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}