/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-action-indicator-color: Specifies the color of the component's indicator.
 */

:host {
  @extend %component-host;
  @apply flex bg-transparent;
  --calcite-action-indicator-color: theme("colors.brand");
}

@include disabled();

.button {
  @apply bg-foreground-1
    fill-color-3
    focus-base
    text-n2h
    text-color-3
    relative
    m-0
    flex
    w-auto
    cursor-pointer
    items-center
    justify-start
    border-none
    font-sans
    font-medium;

  text-align: unset;
  flex: 1 0 auto;
  &:hover {
    @apply bg-foreground-2 text-color-1 fill-color-1;
  }

  &:focus {
    @apply bg-foreground-2 text-color-1 fill-color-1 focus-inset;
  }

  &:active {
    @apply bg-foreground-3;
  }

  .icon-container {
    @apply pointer-events-none
      m-0
      flex
      items-center
      justify-center;
    min-inline-size: theme("spacing.4");
    min-block-size: theme("spacing.4");
  }

  .text-container {
    @apply m-0
      w-0
      truncate
      leading-6
      opacity-0
      transition-opacity
      duration-150
      ease-in-out;
    transition-property: margin;
    transition-property: inline-size;
  }

  .text-container--visible {
    @apply w-auto flex-auto opacity-100;
  }
}

:host([scale="s"]) {
  .button {
    @apply text-n2h px-2 py-1 font-normal;
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.2");
  }
}

:host([scale="m"]) {
  .button {
    @apply text-n1h px-4 py-3 font-normal;
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.3");
  }
}

:host([scale="l"]) {
  .button {
    @apply text-0h p-5 font-normal;
  }
  .button--text-visible .icon-container {
    margin-inline-end: theme("spacing.4");
  }
}

:host([alignment="center"]) .button {
  @apply justify-center;
}

:host([alignment="end"]) .button {
  @apply justify-end;
}

:host([alignment="center"]),
:host([alignment="end"]) {
  .button .text-container--visible {
    @apply flex-initial;
  }
}

// Compact
:host([scale="s"][compact]) .button,
:host([scale="m"][compact]) .button,
:host([scale="l"][compact]) .button {
  @apply px-0;
}

.slot-container {
  @apply flex;
}

.slot-container--hidden {
  @apply hidden;
}

.button--text-visible {
  @apply w-full;
}

:host([active]) .button,
:host([active]) .button:hover,
:host([active]) .button:focus,
:host([active][loading]) .button {
  @apply text-color-1 fill-color-1 bg-foreground-3;
}

:host([active]) .button:active {
  @apply bg-foreground-1;
}

//clear is deprecated. use transparent
:host([appearance="clear"]) .button,
:host([appearance="transparent"]) .button {
  @apply bg-transparent
    transition-shadow
    duration-150
    ease-in-out;
}

:host([appearance="clear"]) .button:hover,
:host([appearance="clear"]) .button:focus,
:host([appearance="transparent"]) .button:hover,
:host([appearance="transparent"]) .button:focus {
  @apply bg-transparent;
  box-shadow: 0 0 0 2px theme("borderColor.color.1") inset;
}

:host([active][appearance="clear"]) .button,
:host([active][appearance="clear"]) .button:hover,
:host([active][appearance="clear"]) .button:focus,
:host([active][appearance="transparent"]) .button,
:host([active][appearance="transparent"]) .button:hover,
:host([active][appearance="transparent"]) .button:focus {
  @apply text-color-1 fill-color-1 bg-foreground-3;
}

:host([appearance="clear"][loading]) .button,
:host([appearance="clear"][disabled]) .button,
:host([appearance="transparent"][loading]) .button,
:host([appearance="transparent"][disabled]) .button {
  @apply bg-transparent;
}

:host([loading]) .button,
:host([loading]) .button:hover,
:host([loading]) .button:focus {
  @apply bg-foreground-1;
  .text-container {
    @apply opacity-disabled;
  }
}

:host([loading]) calcite-loader[inline] {
  @apply text-color-3;
  margin-inline-end: theme("spacing.0");
}

:host([disabled]) .button,
:host([disabled]) .button:hover,
:host([disabled]) .button:focus {
  @apply opacity-disabled bg-foreground-1 cursor-default;
}

:host([disabled][active]) .button,
:host([disabled][active]) .button:hover,
:host([disabled][active]) .button:focus {
  @apply opacity-disabled bg-foreground-3;
}

:host([indicator]) {
  .button::after {
    content: "";
    @apply absolute
      h-2
      w-2
      rounded-full
      border-2;

    background-color: var(--calcite-action-indicator-color);
    border-color: theme("colors.background.foreground.1");
    inset-block-end: theme("spacing.3");
    inset-inline-end: theme("spacing.3");
  }
  .button--text-visible {
    &::after {
      inset-block-end: auto;
    }
    .text-container--visible {
      margin-inline-end: theme("spacing.4");
    }
  }
  .button:hover::after,
  .button:focus::after {
    border-color: theme("colors.background.foreground.1");
  }
}

:host([indicator][scale="s"]) {
  .button::after {
    inset-block-end: theme("spacing.1");
    inset-inline-end: theme("spacing.1");
  }
  .button--text-visible::after {
    inset-block-end: auto;
    inset-inline-end: theme("spacing.2");
  }
}

:host([indicator][active]) .button::after {
  border-color: theme("colors.background.foreground.3");
}
