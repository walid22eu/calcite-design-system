/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-combobox-input-height: the height of the combobox input
 */

:host {
  @apply relative block;
}

:host([disabled]) {
  @apply pointer-events-none select-none opacity-50;
}

:host([scale="s"]) {
  @apply text-n2;
  --calcite-combobox-item-spacing-unit-l: theme("spacing.2");
  --calcite-combobox-item-spacing-unit-s: theme("spacing.1");
  --calcite-combobox-input-height: theme("spacing.6");
}

:host([scale="m"]) {
  @apply text-n1;
  --calcite-combobox-item-spacing-unit-l: theme("spacing.3");
  --calcite-combobox-item-spacing-unit-s: theme("spacing.2");
  --calcite-combobox-input-height: theme("spacing.8");
}

:host([scale="l"]) {
  @apply text-0;
  --calcite-combobox-item-spacing-unit-l: theme("spacing.4");
  --calcite-combobox-item-spacing-unit-s: theme("spacing.3");
  --calcite-combobox-input-height: theme("spacing.11");
}

.wrapper {
  @apply bg-foreground-1
    text-color-1
    focus-base
    flex;
  box-shadow: inset 0 0 0 1px var(--calcite-ui-border-input);
  padding: calc(var(--calcite-combobox-item-spacing-unit-s) / 4) var(--calcite-combobox-item-spacing-unit-l);
}

:host(:focus-within) .wrapper,
.wrapper--active {
  @apply focus-inset;
}

.wrapper--single {
  padding: 0 var(--calcite-combobox-item-spacing-unit-l);
  @apply cursor-pointer flex-nowrap;
}

.grid-input {
  @apply flex
    flex-grow
    flex-wrap
    items-center
    truncate
    p-0;
}

.input {
  @apply font-inherit
  text-color-1
  flex-grow
  appearance-none
  border-none
  bg-transparent
  p-0;
  font-size: inherit;
  height: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
  min-width: 120px;
  margin-bottom: var(--calcite-combobox-item-spacing-unit-s);
  &:focus {
    @apply outline-none;
  }
}

.input--transparent {
  @apply opacity-0;
}

.input--single {
  @apply mb-0 mt-0 p-0;
}

.wrapper--active .input-single {
  @apply cursor-text;
}

.input--hidden {
  @apply pointer-events-none
  w-0
  min-w-0
  opacity-0;
}

.input--icon {
  padding: 0 var(--calcite-combobox-item-spacing-unit-l);
}

.input-wrap {
  @apply flex flex-grow;
}

.input-wrap--single {
  @apply flex-1 overflow-hidden;
}

.label {
  @apply pointer-events-none
    flex
    max-w-full
    flex-auto
    truncate
    p-0
    font-normal;
  height: var(--calcite-combobox-input-height);
  line-height: var(--calcite-combobox-input-height);
}

.label--spaced {
  @apply py-0;
  padding-left: var(--calcite-combobox-item-spacing-unit-l);
  padding-right: var(--calcite-combobox-item-spacing-unit-l);
}

.icon-end,
.icon-start {
  @apply flex
    w-4 cursor-pointer
    items-center;
}

.icon-end {
  @apply flex-none;
}

.popper-container {
  @apply w-full;
  @include popperContainer();
  @include popperWrapper();
}

@include popperElemAnim(".popper-container");

.popper-container--active {
  @include popperWrapperActive();
}

.screen-readers-only {
  @apply sr-only;
}

.list-container {
  @apply bg-foreground-1
    max-h-screen
    overflow-y-auto;
  width: var(--calcite-dropdown-width);
}

.list {
  @apply m-0 block p-0;
}

.list--hide {
  @apply h-0 overflow-hidden;
}

.chip {
  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);
  margin-inline: 0 var(--calcite-combobox-item-spacing-unit-s);
  max-width: 100%;
}

.chip--active {
  @apply bg-foreground-3;
}

.item {
  @apply block;
}

@include hidden-form-input();
