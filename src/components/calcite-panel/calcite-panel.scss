/**
 * CSS Custom Properties
 *
 * These properties can be overridden using the component's tag as selector.
 *
 * @prop --calcite-panel-max-height: the maximum height of the panel
 * @prop --calcite-panel-max-width: the maximum width of the panel
 * @prop --calcite-panel-min-width: the minimum width of the panel
 */

:host {
  @extend %component-host;
  @apply flex
    flex-auto
    overflow-hidden
    relative
    w-full;

  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);
  --calcite-panel-max-height: unset;
  --calcite-panel-width: 100%;
  --calcite-panel-min-width: unset;
  --calcite-panel-max-width: unset;
}

@import "../../assets/styles/header";

.container {
  @apply flex
    flex-auto
    flex-col
    items-stretch
    bg-background
    w-full
    p-0
    m-0;

  max-height: var(--calcite-panel-max-height);
  width: var(--calcite-panel-width);
  max-width: var(--calcite-panel-max-width);
  min-width: var(--calcite-panel-min-width);
  transition: max-height $transition, width $transition;
}

:host([height-scale="s"]) {
  --calcite-panel-max-height: 40vh;
}

:host([height-scale="m"]) {
  --calcite-panel-max-height: 60vh;
}

:host([height-scale="l"]) {
  --calcite-panel-max-height: 80vh;
}

:host([width-scale="s"]) {
  --calcite-panel-width: calc(var(--calcite-panel-width-multiplier) * 12vw);
  --calcite-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 300px);
  --calcite-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 150px);
}

:host([width-scale="m"]) {
  --calcite-panel-width: calc(var(--calcite-panel-width-multiplier) * 20vw);
  --calcite-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 420px);
  --calcite-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 240px);
}

:host([width-scale="l"]) {
  --calcite-panel-width: calc(var(--calcite-panel-width-multiplier) * 45vw);
  --calcite-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 680px);
  --calcite-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 340px);
}

.container[hidden] {
  @apply hidden;
}

:host([loading]) .container,
:host([disabled]) .container {
  @apply relative;
  z-index: 1;
}

.header {
  border-bottom: 1px solid;
  @apply items-stretch
    bg-foreground-1
    justify-start
    sticky
    top-0
    border-b-color-3
    w-full;
  flex: 0 0 auto;
  min-height: theme("spacing.12");
  z-index: 2;
  width: 100%;
}

.header-content {
  @apply block
    overflow-hidden
    mr-auto
    py-4
    px-3;
  .heading,
  .summary {
    @apply p-0
      block
      overflow-hidden
      whitespace-no-wrap
      w-full;
    text-overflow: ellipsis;
  }
  .heading {
    @apply font-medium mt-0 mx-0 mb-1 text-0h;
    &:only-child {
      @apply mb-0;
    }
  }
  .summary {
    @apply text-color-2 text--1h;
  }
}

.back-button {
  @apply border-color-3
  border-solid
  border-0
  border-r;
}

.calcite--rtl .back-button {
  @apply border-r-0 border-l;
}

.header-actions {
  @apply flex
  items-stretch
  flex-row
  flex-no-wrap;
}

.header-actions--end {
  @apply ml-auto;
}

.menu-container:only-child {
  @apply ml-auto;
}

.menu-button {
  @apply self-stretch
    flex-initial
    h-full
    relative;
}
.menu {
  min-width: theme("spacing.40");
  flex-flow: column nowrap;
}

.content-container {
  @apply items-stretch 
  bg-background
  flex
  flex-auto
  overflow-auto
  flex-no-wrap
  flex-col;
}

.footer {
  border-top: 1px solid;
  @apply bg-foreground-1
  border-t-color-3
  flex
  justify-evenly
  sticky
  bottom-0
  w-full;

  flex: 0 0 auto;
  min-height: theme("spacing.12");
  padding: theme("spacing.2");
}

.calcite--rtl {
  .header-content {
    @apply ml-auto;
    margin-right: unset;
  }
  .header-actions--end {
    @apply mr-auto;
    margin-left: unset;
  }
  .menu-container:only-child {
    @apply mr-auto;
    margin-left: unset;
  }
}

.fab-container {
  @apply inline-block
  sticky
  my-0
  mx-auto
  p-2
  bottom-0
  left-0
  right-0;

  z-index: 1;
}
