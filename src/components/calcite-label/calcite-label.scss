:host([alignment="start"]),
:host([alignment="end"][dir="rtl"]) {
  @apply text-left;
}

:host([alignment="end"]),
:host([alignment="start"][dir="rtl"]) {
  @apply text-right;
}

:host([alignment="center"]) {
  @apply text-center;
}

:host([scale="s"]) {
  --calcite-label-margin-bottom: 12px;
  label {
    @apply text--2;
  }
}
:host([scale="m"]) {
  --calcite-label-margin-bottom: 14px;
  label {
    @apply text--1;
  }
}
:host([scale="l"]) {
  --calcite-label-margin-bottom: 18px;
  label {
    @apply text-1;
  }
}

:host label {
  cursor: pointer;
  width: 100%;
  margin: 0 0 var(--calcite-label-margin-bottom, $baseline) 0;
  line-height: 1.3;
}

:host([layout="default"]) {
  label {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }
}

:host([layout="inline"]),
:host([layout="inline-space-between"]) {
  label {
    align-items: center;
    display: flex;
    flex-direction: row;
    gap: $baseline/2;
  }
}

:host([layout="inline-space-between"]) {
  label {
    justify-content: space-between;
  }
}

// disabled styles
:host([disabled]) {
  & > label {
    pointer-events: none;
    opacity: var(--calcite-ui-opacity-disabled);
  }
  ::slotted(*) {
    pointer-events: none;
  }
  // prevent opacity stacking with already disabled child elements
  ::slotted(*[disabled]),
  ::slotted(*[disabled] *) {
    opacity: 1;
  }
  ::slotted(calcite-input-message:not([active])) {
    opacity: 0;
  }
}

// status
$inputStatusColors: "invalid" var(--calcite-ui-danger), "valid" var(--calcite-ui-text-2),
  "idle" var(--calcite-ui-text-2);

@each $statusColor in $inputStatusColors {
  $name: nth($statusColor, 1);
  $color: nth($statusColor, 2);

  :host([status="#{$name}"]) label {
    color: $color;
  }
}

:host([disable-spacing]) {
  label {
    gap: 0;
    margin: 0;
  }
}
