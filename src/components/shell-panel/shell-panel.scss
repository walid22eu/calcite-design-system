:host {
  @apply pointer-events-none
    flex
    flex-initial
    items-stretch;
  --calcite-shell-panel-detached-max-height: unset;
}

.container {
  @apply text-color-2
  text-n1
  pointer-events-none
  box-border
  flex
  flex-auto
  items-stretch
  bg-transparent;

  * {
    @apply box-border;
  }
}

:host(:hover),
:host(:focus-within) {
  .separator:not(:hover):not(:focus) {
    @apply opacity-100;
    background-color: var(--calcite-ui-border-3);
  }
}

.separator {
  @apply transition-default
  pointer-events-auto
  absolute
  bottom-0
  top-0
  flex
  h-full
  w-0.5
  bg-transparent
  opacity-0;
  cursor: col-resize;
  outline: none;
  &:hover {
    @apply opacity-100;
    background-color: var(--calcite-ui-border-2);
  }
  &:focus {
    @apply bg-brand opacity-100;
  }
}

:host([position="start"]) .separator {
  inset-inline-end: -2px;
}

:host([position="end"]) .separator {
  inset-inline-start: -2px;
}

::slotted(calcite-panel),
::slotted(calcite-flow) {
  @apply h-full w-full flex-auto;
  max-block-size: unset;
  max-inline-size: unset;
}

::slotted(.calcite-match-height) {
  @apply flex flex-auto overflow-hidden;
}

.content {
  @apply bg-background
  pointer-events-auto
  flex
  flex-col
  flex-nowrap
  items-stretch
  self-stretch
  p-0;

  inline-size: var(--calcite-shell-panel-width);
  max-inline-size: var(--calcite-shell-panel-max-width);
  min-inline-size: var(--calcite-shell-panel-min-width);
  transition: max-block-size var(--calcite-animation-timing), max-inline-size var(--calcite-animation-timing);
}

.content__header {
  @apply flex
  flex-initial
  flex-col
  flex-nowrap
  items-stretch;
}

.content__body {
  @apply flex
  flex-auto
  flex-col
  overflow-hidden;
}

:host([width-scale="s"]) .content {
  --calcite-shell-panel-width: calc(var(--calcite-panel-width-multiplier) * 12vw);
  --calcite-shell-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 300px);
  --calcite-shell-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 150px);
}

:host([width-scale="m"]) .content {
  --calcite-shell-panel-width: calc(var(--calcite-panel-width-multiplier) * 20vw);
  --calcite-shell-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 420px);
  --calcite-shell-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 240px);
}

:host([width-scale="l"]) .content {
  --calcite-shell-panel-width: calc(var(--calcite-panel-width-multiplier) * 45vw);
  --calcite-shell-panel-max-width: calc(var(--calcite-panel-width-multiplier) * 680px);
  --calcite-shell-panel-min-width: calc(var(--calcite-panel-width-multiplier) * 340px);
}

:host([detached-height-scale="s"]) .content--detached {
  --calcite-shell-panel-detached-max-height: 40vh;
}

:host([detached-height-scale="m"]) .content--detached {
  --calcite-shell-panel-detached-max-height: 60vh;
}

:host([detached-height-scale="l"]) .content--detached {
  --calcite-shell-panel-detached-max-height: 80vh;
}

.content--detached {
  @apply shadow-0
  mx-2
  mt-2
  mb-auto
  h-auto
  overflow-hidden
  rounded;

  max-block-size: var(--calcite-shell-panel-detached-max-height);
  ::slotted(calcite-panel),
  ::slotted(calcite-flow) {
    max-block-size: unset;
  }
}

:host([position="start"]) .content--detached,
:host([position="end"]) .content--detached {
  ::slotted(calcite-panel),
  ::slotted(calcite-flow) {
    @apply border-none;
  }
}

.content[hidden] {
  @apply hidden;
}

slot[name="action-bar"]::slotted(calcite-action-bar),
.content ::slotted(calcite-flow),
.content ::slotted(calcite-panel:not([dismissed])) {
  @apply border-color-3 border border-solid;
}

:host([position="start"]) slot[name="action-bar"]::slotted(calcite-action-bar),
:host([position="start"]) .content ::slotted(calcite-flow),
:host([position="start"]) .content ::slotted(calcite-panel) {
  border-inline-start: none;
}

:host([position="end"]) slot[name="action-bar"]::slotted(calcite-action-bar),
:host([position="end"]) .content ::slotted(calcite-flow),
:host([position="end"]) .content ::slotted(calcite-panel) {
  border-inline-end: none;
}
