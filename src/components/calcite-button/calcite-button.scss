:host {
  @apply inline-block w-auto align-middle;
}

// fab variants
:host([round]) {
  border-radius: 50px;
  & a,
  & button {
    border-radius: 50px;
  }
}

// focus styles
:host button,
:host a {
  @apply focus-base;
  &:focus {
    @apply focus-outset;
  }
}
// button base
:host button,
:host a {
  --calcite-button-padding-x: 0;
  --calcite-button-padding-y: 0;
  padding: var(--calcite-button-padding-y) var(--calcite-button-padding-x) var(--calcite-button-padding-y)
    var(--calcite-button-padding-x);
  @apply relative
    flex
    items-center
    justify-center
    no-underline
    w-full
    h-full
    rounded-none
    border-none
    select-none
    appearance-none
    cursor-pointer
    text-center
    box-border
    font-inherit;
  // include transition from focus
  transition: background-color 0.15s ease-in-out, border 0.15s ease-in-out, box-shadow 0.15s ease-in-out,
    outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;
  &:hover {
    @apply no-underline;
  }
}

.content {
  @apply flex ml-2 mr-2;
  flex-basis: auto;
}

:host(:not([icon-start])) {
  .content {
    margin-left: unset;
  }
}
:host(:not([icon-end])) {
  .content {
    margin-right: unset;
  }
}
:host([icon-start]:not([icon-end])) {
  .calcite--rtl .content {
    margin-left: unset;
    @apply mr-2;
  }
}
:host([icon-end]:not([icon-start])) {
  .calcite--rtl .content {
    margin-right: unset;
    @apply ml-2;
  }
}

// button width
:host([width="auto"]) {
  @apply w-auto;
}

:host([width="half"]) {
  @apply w-2/4;
}

:host([width="full"]) {
  @apply w-full;
}

// alignment
:host([alignment="center"]:not([width="auto"])) {
  a,
  button {
    @apply justify-center;
  }
}
:host([alignment="start"]:not([width="auto"])) {
  a,
  button {
    @apply justify-start;
  }
}
:host([alignment="end"]:not([width="auto"])) {
  a,
  button {
    @apply justify-end;
  }
}
:host([alignment*="space-between"]:not([width="auto"])) {
  a,
  button {
    @apply justify-between;
  }
}
:host([alignment="icon-start-space-between"]:not([width="auto"])) {
  .icon--start {
    @apply mr-auto;
  }
  a,
  button {
    text-align: unset;
  }
}
:host([alignment="icon-end-space-between"]:not([width="auto"])) {
  .icon--end {
    @apply ml-auto;
  }
  a,
  button {
    text-align: unset;
  }
}
:host([alignment="icon-start-space-between"]:not([width="auto"])) {
  .calcite--rtl .icon--start {
    margin-right: unset;
    @apply ml-auto;
  }
}
:host([alignment="icon-end-space-between"]:not([width="auto"])) {
  .calcite--rtl .icon--end {
    margin-left: unset;
    @apply mr-auto;
  }
}

// only two icons
:host([alignment="center"]) {
  a:not(.content--slotted),
  button:not(.content--slotted) {
    .icon--start + .icon--end {
      @apply ml-2;
    }
  }
}

:host([alignment="center"]) {
  a.calcite--rtl:not(.content--slotted),
  button.calcite--rtl:not(.content--slotted) {
    .icon--start + .icon--end {
      margin-left: unset;
      @apply mr-2;
    }
  }
}

.icon {
  @apply inline-flex
    relative
    m-0
    transition-default;
  line-height: inherit;
}

// disabled styles
:host([loading]),
:host([disabled]) {
  @apply pointer-events-none;
  button,
  a {
    @apply pointer-events-none opacity-disabled;
  }
}

@keyframes loader-in {
  0% {
    width: 0;
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    width: 1rem;
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes loader-out {
  0% {
    width: 1rem;
    opacity: 1;
    transform: scale(1);
  }
  100% {
    width: 0;
    opacity: 0;
    transform: scale(0.5);
  }
}

.calcite-button--loader {
  @apply flex;
  calcite-loader {
    @apply m-0;
    transition: width 300ms ease-in-out, opacity 300ms ease-in-out, transform 300ms ease-in-out;
    &.loading-in {
      animation-name: loader-in;
      animation-duration: 310ms;
    }
    &.loading-out {
      animation-name: loader-out;
      animation-duration: 310ms;
    }
  }
}

:host([loading]) {
  // center loading spinner when button has text
  button.content--slotted,
  a.content--slotted {
    .calcite-button--loader calcite-loader {
      margin-inline-end: theme("margin.2");
    }
  }
  // hide icons when loading with no text
  button:not(.content--slotted),
  a:not(.content--slotted) {
    .icon--start,
    .icon--end {
      @apply hidden;
    }
  }
}

// button styles
// solid
@mixin btn-solid($bg-color, $bg-color-hover, $bg-color-press, $color) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid transparent;
  &:hover,
  &:focus {
    background-color: $bg-color-hover;
  }
  &:active {
    background-color: $bg-color;
  }
  & .calcite-button--icon {
    fill: $color;
  }
  & calcite-loader {
    color: $color;
  }
}

:host([appearance="solid"][color="blue"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-brand),
      var(--calcite-ui-brand-hover),
      var(--calcite-ui-brand-press),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="solid"][color="red"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-danger),
      var(--calcite-ui-danger-hover),
      var(--calcite-ui-danger-press),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="solid"][color="neutral"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="solid"][color="inverse"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-inverse),
      var(--calcite-ui-inverse-hover),
      var(--calcite-ui-inverse-press),
      $blk-000
    );
  }
}

// outline and clear
@mixin btn-outline-clear($bg-color, $border-color, $border-color-hover, $border-color-press, $color, $color-press) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border-color;
  box-shadow: inset 0 0 0 1px transparent;
  &:hover {
    border-color: $border-color;
    box-shadow: inset 0 0 0 1px $border-color;
  }
  &:active,
  &:focus {
    color: $color-press;
    border-color: $border-color-press;
    box-shadow: inset 0 0 0 2px $border-color-press;
    & .calcite-button--icon {
      fill: $color-press;
    }
  }
  & .calcite-button--icon {
    fill: $color;
  }
  & calcite-loader {
    color: $color;
  }
}

:host([appearance="outline"][color="blue"]) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-brand),
      var(--calcite-ui-brand-hover),
      var(--calcite-ui-brand-press),
      var(--calcite-ui-brand),
      var(--calcite-ui-brand-press)
    );
  }
}
:host([appearance="outline"][color="red"]) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-danger),
      var(--calcite-ui-danger-hover),
      var(--calcite-ui-danger-press),
      var(--calcite-ui-danger),
      var(--calcite-ui-danger-press)
    );
  }
}
:host([appearance="outline"][color="neutral"]) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="outline"][color="inverse"]) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-inverse),
      var(--calcite-ui-inverse-press),
      var(--calcite-ui-inverse-hover),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="clear"][color="blue"]) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-brand),
      var(--calcite-ui-brand-hover),
      var(--calcite-ui-brand-press),
      var(--calcite-ui-brand),
      var(--calcite-ui-brand-press)
    );
  }
}
:host([appearance="clear"][color="red"]) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-danger),
      var(--calcite-ui-danger-hover),
      var(--calcite-ui-danger-press),
      var(--calcite-ui-danger),
      var(--calcite-ui-danger-press)
    );
  }
}
:host([appearance="clear"][color="neutral"]) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="clear"][color="inverse"]) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-inverse),
      var(--calcite-ui-inverse-press),
      var(--calcite-ui-inverse-hover),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}

:host([appearance="outline"][split-child="primary"]) button,
:host([appearance="clear"][split-child="primary"]) button {
  @apply border-r-0 border-l;
  &.calcite--rtl {
    @apply border-l-0 border-r;
  }
}

:host([appearance="outline"][split-child="secondary"]) button,
:host([appearance="clear"][split-child="secondary"]) button {
  @apply border-l-0 border-r;
  &.calcite--rtl {
    @apply border-r-0 border-l;
  }
}

// transparent
@mixin btn-transparent($color) {
  color: $color;
  background-color: transparent;
  &:hover,
  &:focus {
    background-color: var(--calcite-button-transparent-hover);
  }
  &:active {
    background-color: var(--calcite-button-transparent-press);
  }
  & calcite-loader {
    color: $color;
  }
}

:host([appearance="transparent"][color="blue"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-text-link));
  }
}

:host([appearance="transparent"][color="red"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-danger-press));
  }
}
:host([appearance="transparent"][color="neutral"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-text-1));
  }
}
:host([appearance="transparent"][color="inverse"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-foreground-1));
  }
}

// generate button scales (scenario: text only)
:host([scale="s"]) button.content--slotted,
:host([scale="s"]) a.content--slotted {
  --calcite-button-padding-x: 7px;
  @apply text--2h;
}
:host([scale="s"]:not([appearance="transparent"])) button.content--slotted,
:host([scale="s"]:not([appearance="transparent"])) a.content--slotted {
  --calcite-button-padding-y: 3px;
}
// accommodate for transparent buttons not having borders
:host([scale="s"][appearance="transparent"]) button.content--slotted,
:host([scale="s"][appearance="transparent"]) a.content--slotted {
  --calcite-button-padding-x: theme("padding.2");
  --calcite-button-padding-y: theme("padding.1");
}
:host([scale="m"]) button.content--slotted,
:host([scale="m"]) a.content--slotted {
  --calcite-button-padding-x: 11px;
  @apply text--1h;
}
:host([scale="m"]:not([appearance="transparent"])) button.content--slotted,
:host([scale="m"]:not([appearance="transparent"])) a.content--slotted {
  --calcite-button-padding-y: 7px;
}
// accommodate for transparent buttons not having borders
:host([scale="m"][appearance="transparent"]) button.content--slotted,
:host([scale="m"][appearance="transparent"]) a.content--slotted {
  --calcite-button-padding-x: theme("padding.3");
  --calcite-button-padding-y: theme("padding.2");
}
:host([scale="l"]) button.content--slotted,
:host([scale="l"]) a.content--slotted {
  --calcite-button-padding-x: 15px;
  @apply text-0h;
}
:host([scale="l"]:not([appearance="transparent"])) button.content--slotted,
:host([scale="l"]:not([appearance="transparent"])) a.content--slotted {
  --calcite-button-padding-y: 11px;
}
// accommodate for transparent buttons not having borders
:host([scale="l"][appearance="transparent"]) button.content--slotted,
:host([scale="l"][appearance="transparent"]) a.content--slotted {
  --calcite-button-padding-x: theme("padding.4");
  --calcite-button-padding-y: theme("padding.3");
}

// generate fab scales (scenario: 1 icon, ie., should be square)
:host([scale="s"]) button:not(.content--slotted),
:host([scale="s"]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding[0.5]");
  --calcite-button-padding-y: 3px;
  @apply text-0h w-6;
  min-height: theme("height.6");
}
// accommodate for transparent buttons not having borders
:host([scale="s"][appearance="transparent"]) button:not(.content--slotted),
:host([scale="s"][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-y: theme("padding.1");
}
:host([scale="m"]) button:not(.content--slotted),
:host([scale="m"]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding[0.5]");
  --calcite-button-padding-y: 7px;
  @apply text-0h w-8;
  min-height: theme("height.8");
}
// accommodate for transparent buttons not having borders
:host([scale="m"][appearance="transparent"]) button:not(.content--slotted),
:host([scale="m"][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-y: theme("padding.2");
}
:host([scale="l"]) button:not(.content--slotted),
:host([scale="l"]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding[0.5]");
  --calcite-button-padding-y: 9px;
  @apply text-0h w-11;
  min-height: theme("height.11");
}
// accommodate for transparent buttons not having borders
:host([scale="l"][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-y: theme("padding[2.5]");
}

// generate fab scales (scenario: 2 icons, ie., should not be square)
:host([scale="s"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-button-padding-x: 23px;
  @apply text-0h h-6;
}
// accommodate for transparent buttons not having borders
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="s"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding.6");
}
:host([scale="m"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding.8");
  @apply text-0h h-8;
}
// accommodate for transparent buttons not having borders
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="m"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-x: 33px;
}
:host([scale="l"][icon-start][icon-end]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end]) a:not(.content--slotted) {
  --calcite-button-padding-x: 43px;
  @apply text-0h h-11;
  // add space between when only 2 icons
  .icon--start + .icon--end {
    margin-inline-start: theme("margin.4");
  }
}
// accommodate for transparent buttons not having borders
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) button:not(.content--slotted),
:host([scale="l"][icon-start][icon-end][appearance="transparent"]) a:not(.content--slotted) {
  --calcite-button-padding-x: theme("padding.11");
}
