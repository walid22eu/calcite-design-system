:host-context([theme="dark"]) {
  @include calcite-theme-dark();
}

// theme variables
// light theme
:host {
  display: inline-block;
  width: auto;
  vertical-align: middle;
  --calcite-button-dark: #{$blk-180};
  --calcite-button-dark-hover: #{$blk-170};
  --calcite-button-dark-press: #{$blk-190};
  --calcite-button-transparent-hover: rgba(0, 0, 0, 0.05);
  --calcite-button-transparent-press: rgba(0, 0, 0, 0.08);
}

// dark theme
:host([theme="dark"]) {
  --calcite-button-dark: #{$blk-180};
  --calcite-button-dark-hover: #{$blk-190};
  --calcite-button-dark-press: #{$blk-170};
  --calcite-button-transparent-hover: rgba(255, 255, 255, 0.05);
  --calcite-button-transparent-press: rgba(255, 255, 255, 0.08);
}

// fab variants
:host([round]) {
  border-radius: 50px;
  & a,
  & button {
    border-radius: 50px;
  }
}

:host([floating]) {
  & a,
  & button {
    box-shadow: $shadow-2;
    &:hover {
      box-shadow: $shadow-2--hover;
    }
    &:active {
      box-shadow: $shadow-2--press;
    }
  }
}
// focus styles
:host button,
:host a,
:host span {
  @include focus-style-base();
  &:focus {
    @include focus-style-outset();
  }
}
// button base
:host button,
:host a,
:host span {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $baseline/4 1rem;
  text-decoration: none;
  width: 100%;
  height: 100%;
  border-radius: 0;
  border: none;
  user-select: none;
  font-family: inherit;
  -webkit-appearance: none;
  cursor: pointer;
  text-align: center;
  box-sizing: border-box;
  // include transition from focus
  transition: background-color 0.15s ease-in-out, border 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out, outline-offset 100ms ease-in-out,
    outline-color 100ms ease-in-out;
  &:hover {
    text-decoration: none;
  }
}

// button scale
@mixin btn-scale($font-size, $line-height, $padding-y, $padding-x) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
}

@mixin btn-scale-notext($font-size, $size) {
  height: $size;
  width: $size;
  font-size: $font-size;
}

// button width
:host([width="auto"]) {
  width: auto;
}

:host([width="half"]) {
  width: 50%;
}

:host([width="full"]) {
  width: 100%;
}

.calcite-button--icon {
  display: inline-flex;
  position: relative;
  margin: 0;
  line-height: inherit;
  transition: $transition;
}

// disabled styles
:host([disabled]) {
  button,
  span,
  a {
    pointer-events: none;
    opacity: 0.4;
  }
}
// icon positioning and styles
:host([hastext][icon-position="start"]) .calcite-button--icon {
  margin-right: $baseline/3;
}

:host([hastext][icon-position="start"][dir="rtl"]) .calcite-button--icon {
  margin-right: 0;
  margin-left: $baseline/3;
}

:host([hastext][icon-position="end"]) .calcite-button--icon {
  margin-left: $baseline/3;
}

:host([hastext][icon-position="end"][dir="rtl"]) .calcite-button--icon {
  margin-left: 0;
  margin-right: $baseline/3;
}

.calcite-button--loader {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  align-items: center;
  justify-content: center;
  calcite-loader {
    margin: 0;
  }
}

:host([loading]) {
  button,
  a {
    color: transparent !important;
    pointer-events: none;
    .calcite-button--icon {
      opacity: 0;
    }
  }
}

// button styles
// solid
@mixin btn-solid($bg-color, $bg-color-hover, $bg-color-press, $color) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid transparent;
  &:hover,
  &:focus {
    background-color: $bg-color-hover;
  }
  &:active {
    background-color: $bg-color;
  }
  & .calcite-button--icon {
    fill: $color;
  }
  & calcite-loader {
    color: $color;
  }
}

:host([appearance="solid"][color="blue"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-blue-1),
      var(--calcite-ui-blue-2),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="solid"][color="red"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-red-1),
      var(--calcite-ui-red-2),
      var(--calcite-ui-red-3),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="solid"][color="light"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="solid"][color="dark"]) {
  button,
  a {
    @include btn-solid(
      var(--calcite-button-dark),
      var(--calcite-button-dark-hover),
      var(--calcite-button-dark-press),
      $blk-000
    );
  }
}

// outline and clear
@mixin btn-outline-clear(
  $bg-color,
  $border-color,
  $border-color-hover,
  $border-color-press,
  $color,
  $color-press
) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border-color;
  box-shadow: inset 0 0 0 1px transparent;
  &:hover {
    border-color: $border-color;
    box-shadow: inset 0 0 0 1px $border-color;
  }
  &:active,
  &:focus {
    color: $color-press;
    border-color: $border-color-press;
    box-shadow: inset 0 0 0 2px $border-color-press;
    & .calcite-button--icon {
      fill: $color-press;
    }
  }
  & .calcite-button--icon {
    fill: $color;
  }
  & calcite-loader {
    color: $color;
  }
}
// outline and clear floating
@mixin btn-outline-clear-floating(
  $bg-color,
  $border-color,
  $border-color-hover,
  $border-color-press,
  $color,
  $color-press
) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border-color;
  box-shadow: inset 0 0 0 1px transparent, $shadow-2;
  &:hover {
    border-color: 1px solid $border-color;
    box-shadow: inset 0 0 0 1px $border-color, $shadow-2--hover;
  }
  &:active,
  &:focus {
    color: $color-press;
    border-color: $border-color-press;
    box-shadow: inset 0 0 0 2px $border-color-press, $shadow-2--press;
    & .calcite-button--icon {
      fill: $color-press;
    }
  }
  & .calcite-button--icon {
    fill: $color;
  }
  & calcite-loader {
    color: $color;
  }
}

:host([appearance="outline"][color="blue"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-2),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3)
    );
  }
}
:host([appearance="outline"][color="red"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-2),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3)
    );
  }
}
:host([appearance="outline"][color="light"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="outline"][color="dark"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      var(--calcite-ui-foreground-1),
      $blk-180,
      $blk-190,
      $blk-170,
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="clear"][color="blue"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-2),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3)
    );
  }
}
:host([appearance="clear"][color="red"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-2),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3)
    );
  }
}
:host([appearance="clear"][color="light"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-background),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="clear"][color="dark"]:not([floating])) {
  button,
  a {
    @include btn-outline-clear(
      transparent,
      $blk-180,
      $blk-190,
      $blk-170,
      $blk-220,
      $blk-220
    );
  }
}
// floating variants
:host([appearance="outline"][color="blue"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-2),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3)
    );
  }
}
:host([appearance="outline"][color="red"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-2),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3)
    );
  }
}
:host([appearance="outline"][color="light"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      var(--calcite-ui-foreground-1),
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="outline"][color="dark"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      var(--calcite-ui-foreground-1),
      $blk-180,
      $blk-190,
      $blk-170,
      var(--calcite-ui-text-1),
      var(--calcite-ui-text-1)
    );
  }
}
:host([appearance="clear"][color="blue"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      transparent,
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-2),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3),
      var(--calcite-ui-blue-3)
    );
  }
}
:host([appearance="clear"][color="red"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      transparent,
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-2),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3),
      var(--calcite-ui-red-3)
    );
  }
}
:host([appearance="clear"][color="light"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      transparent,
      var(--calcite-ui-foreground-3),
      var(--calcite-ui-foreground-2),
      var(--calcite-ui-border-2),
      var(--calcite-ui-background),
      var(--calcite-ui-foreground-1)
    );
  }
}
:host([appearance="clear"][color="dark"]) {
  button,
  a {
    @include btn-outline-clear-floating(
      transparent,
      $blk-180,
      $blk-190,
      $blk-170,
      $blk-220,
      $blk-220
    );
  }
}

// transparent
@mixin btn-transparent($color) {
  color: $color;
  background-color: transparent;
  &:hover,
  &:focus {
    background-color: var(--calcite-button-transparent-hover);
  }
  &:active {
    background-color: var(--calcite-button-transparent-press);
  }
}

:host([appearance="transparent"][color="blue"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-blue-3));
  }
}

:host([appearance="transparent"][color="red"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-red-3));
  }
}
:host([appearance="transparent"][color="light"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-foreground-1));
  }
}
:host([appearance="transparent"][color="dark"]) {
  button,
  a {
    @include btn-transparent(var(--calcite-ui-text-1));
  }
}

// generate button scales
$btnScales: "s" 12px 16px 7px 12px, "m" 16px 16px 13px 20px,
  "l" 20px 24px 15px 24px;
@each $btnScale in $btnScales {
  $name: nth($btnScale, 1);
  $font-size: nth($btnScale, 2);
  $line-height: nth($btnScale, 3);
  $padding-y: nth($btnScale, 4);
  $padding-x: nth($btnScale, 5);

  :host([scale="#{$name}"][hastext]:not([appearance="transparent"])) button,
  :host([scale="#{$name}"][hastext]:not([appearance="transparent"])) a {
    @include btn-scale($font-size, $line-height, $padding-y, $padding-x);
  }
  // accomodate for transparent buttons not having borders
  :host([scale="#{$name}"][hastext][appearance="transparent"]) button,
  :host([scale="#{$name}"][hastext][appearance="transparent"]) a {
    $compensated-padding-y: $padding-y + 1px;
    @include btn-scale(
      $font-size,
      $line-height,
      $compensated-padding-y,
      $padding-x
    );
  }
}

// generate fab scales
$btnScales2: "s" 12px 32px, "m" 16px 44px, "l" 20px 56px;

@each $btnScale in $btnScales2 {
  $name: nth($btnScale, 1);
  $font-size: nth($btnScale, 2);
  $size: nth($btnScale, 3);

  :host([scale="#{$name}"]:not([hastext])) button,
  :host([scale="#{$name}"]:not([hastext])) a {
    @include btn-scale-notext($font-size, $size);
  }
}
