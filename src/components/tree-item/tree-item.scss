:host {
  @apply text-color-3
    block
    max-w-full
    cursor-pointer
    outline-none;
}

:host([scale="s"]) {
  @apply text-n2h;

  .node-container {
    --calcite-tree-padding-y: theme("padding.1");
    .checkbox,
    .chevron,
    .checkmark,
    .bullet-point {
      margin-inline: theme("margin.1");
    }
  }
}

:host([scale="m"]) {
  @apply text-n1h;

  .node-container {
    --calcite-tree-padding-y: theme("padding.2");
    .checkbox,
    .chevron,
    .checkmark,
    .bullet-point {
      margin-inline: theme("margin.2");
    }
  }
}

:host([scale="l"]) {
  @apply text-0h;

  .node-container {
    --calcite-tree-padding-y: theme("padding.3");
    .checkbox,
    .chevron,
    .checkmark,
    .bullet-point {
      margin-inline: theme("margin.3");
    }
  }
}

:host([lines]) {
  .children-container:after {
    @apply transition-default
        absolute
        top-0
        w-px
        transition-colors;
    // ensure lines don't overlap focus outline
    height: 96%;
    content: "";
    background-color: var(--calcite-ui-border-2);
    z-index: -1;
  }
}

:host(:not([lines])) .node-container:after {
  @apply hidden;
}

::slotted(*) {
  @apply min-w-0 max-w-full break-words;
  color: inherit;
  text-decoration: none !important;

  &:hover {
    text-decoration: none !important;
  }
}

::slotted(a) {
  @apply w-full no-underline;
}
// focus styles
:host {
  @apply focus-base;
}
:host(:focus) {
  @apply focus-inset;
}

.checkbox {
  @apply outline-none;
  line-height: 0;
}

.checkbox-label {
  @apply pointer-events-none flex items-center;
}

.children-container {
  @apply relative h-0 overflow-hidden;
  margin-inline-start: theme("margin.5");
  transform: scaleY(0);
  opacity: 0;
  transition: var(--calcite-animation-timing) $easing-function, opacity var(--calcite-animation-timing) $easing-function,
    all var(--calcite-animation-timing) ease-in-out; // note that we're transitioning transform, not height!
  transform-origin: top; // keep the top of the element in the same place. this is optional.

  :host([expanded]) > & {
    transform: scaleY(1);
    opacity: 1;
    height: auto;
  }
}

.node-container {
  @apply relative flex items-center;
  padding: var(--calcite-tree-padding-y) 0;

  .checkmark,
  .bullet-point {
    @apply transition-default opacity-0;
    color: var(--calcite-ui-border-1);
  }
}

.node-container:hover,
:host([selected]) .node-container:hover,
:host(:focus) .node-container {
  .checkmark,
  .bullet-point {
    @apply opacity-100;
  }
}

:host([selected]) > .node-container,
:host([selected]) > .node-container:hover {
  @apply text-color-1 font-medium;

  .bullet-point,
  .checkmark {
    @apply opacity-100;
    color: theme("colors.brand");
  }
}

// ancestors selection-mode, dropdown without children
:host(:not([has-children])) {
  &:host([scale="s"]) > .node-container[data-selection-mode="ancestors"] .checkbox {
    padding-inline-start: theme("padding.5");
  }
  &:host([scale="m"]) > .node-container[data-selection-mode="ancestors"] .checkbox {
    padding-inline-start: theme("padding.6");
  }
  &:host([scale="l"]) > .node-container[data-selection-mode="ancestors"] .checkbox {
    padding-inline-start: 1.75rem;
  }
}
// ancestors selection-mode, dropdown with children
:host([has-children]) > .node-container[data-selection-mode="ancestors"] {
  .checkbox {
    margin-inline-start: 0;
  }
}

// dropdown with children
:host([has-children]) > .node-container {
  .bullet-point,
  .checkmark {
    @apply hidden;
  }
}

// dropdown expanded and not selected
:host([has-children][expanded]:not([selected])) > .node-container {
  ::slotted(*) {
    @apply text-color-1 font-medium;
  }
}

// dropdown selected (for children, multi-children selected parents)
:host([has-children][selected]) > .node-container {
  &[data-selection-mode="children"],
  &[data-selection-mode="multi-children"] {
    color: var(--calcite-ui-brand);
  }
}

.chevron {
  @apply transition-default
    text-color-3
    relative
    self-center;
  flex: 0 0 auto;
  transform: rotate(0deg);

  .calcite--rtl & {
    transform: rotate(180deg);
  }

  :host([expanded]) > .node-container > & {
    transform: rotate(90deg);
  }
}

:host([selected]) {
  .checkmark,
  .bullet-point {
    color: var(--calcite-ui-brand);
  }
}
