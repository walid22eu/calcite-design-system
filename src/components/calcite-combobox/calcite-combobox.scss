// scale
// todo update when new spacing modifiers are introduced to calcite-base

@mixin floatingContainer($state: "closed") {
  @if $state == "open" {
    transform: translate3d(0, 0, 0);
    opacity: 1;
    max-height: 100vh;
    visibility: visible;
    pointer-events: initial;
  } @else {
    display: block;
    overflow: hidden;
    margin: 0;
    padding: 0;
    visibility: hidden;
    position: absolute;
    z-index: 200;
    opacity: 0;
    background: var(--calcite-ui-foreground);
    border-radius: var(--calcite-border-radius);
    box-shadow: $shadow-2;
    transform: translate3d(0, -$baseline, 0);
    transition: $transition;
    pointer-events: none;
  }
}

:host([scale="xs"]) {
  @include font-size(-4);
  --calcite-combobox-item-padding: #{$baseline/6 $baseline/1.5};
}
:host([scale="s"]) {
  @include font-size(-3);
  --calcite-combobox-item-padding: #{$baseline/3 $baseline/1.5};
}

:host([scale="m"]) {
  @include font-size(-2);
  --calcite-combobox-item-padding: #{$baseline/3 $baseline/1.5};
}

:host([scale="l"]) {
  @include font-size(-1);
  --calcite-combobox-item-padding: #{$baseline/2 $baseline/1.5};
}
:host([scale="xl"]) {
  @include font-size(-0);
  --calcite-combobox-item-padding: #{$baseline/1.5 $baseline/1.5};
}

* {
  box-sizing: border-box;
}

:host {
  display: block;
  position: relative;
}

[role="combobox"] {
  display: flex;
}

input {
  flex-grow: 1;
}

.chip {
  background-color: #ccc;
  border-radius: 12px;
  padding: 3px 6px;
}

.list {
  @include floatingContainer("closed");
  left: 0;
  right: 0;
}

:host([active]) .list {
  transform: translate3d(0, 0, 0);
  opacity: 1;
  max-height: 100vh;
  overflow-y: scroll;
  visibility: visible;
  pointer-events: initial;
  @include floatingContainer("open");
}

.item {
  display: block;
}
