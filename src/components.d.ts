/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  EventEmitter,
} from '@stencil/core';
import {
  TabChangeEventDetail,
} from './interfaces/TabChange';
import {
  TabRegisterEventDetail,
} from './interfaces/TabRegister';


export namespace Components {

  interface CalciteModal {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface CalciteModalAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface CalciteTabNav {
    'id': string;
    'selectedTab': number | string;
  }
  interface CalciteTabNavAttributes extends StencilHTMLAttributes {
    'id'?: string;
    'onCalciteTabChange'?: (event: CustomEvent<TabChangeEventDetail>) => void;
    'selectedTab'?: number | string;
  }

  interface CalciteTabTitle {
    'getTabIndex': () => Promise<any>;
    'id': string;
    'isActive': boolean;
    'setControledBy': (id: string) => void;
    'tab': string;
  }
  interface CalciteTabTitleAttributes extends StencilHTMLAttributes {
    'id'?: string;
    'isActive'?: boolean;
    'onCalciteActivateTab'?: (event: CustomEvent<TabChangeEventDetail>) => void;
    'onCalciteFocusNextTab'?: (event: CustomEvent) => void;
    'onCalciteFocusPreviousTab'?: (event: CustomEvent) => void;
    'onCalciteRegisterTabTitle'?: (event: CustomEvent<TabRegisterEventDetail>) => void;
    'tab'?: string;
  }

  interface CalciteTab {
    'getTabIndex': () => Promise<any>;
    'id': string;
    'isActive': boolean;
    'registerLabeledBy': (id: any) => void;
    'tab': string;
  }
  interface CalciteTabAttributes extends StencilHTMLAttributes {
    'id'?: string;
    'isActive'?: boolean;
    'onCalciteRegisterTab'?: (event: CustomEvent<TabRegisterEventDetail>) => void;
    'tab'?: string;
  }

  interface CalciteTabs {
    'theme': "light" | "dark";
  }
  interface CalciteTabsAttributes extends StencilHTMLAttributes {
    'theme'?: "light" | "dark";
  }
}

declare global {
  interface StencilElementInterfaces {
    'CalciteModal': Components.CalciteModal;
    'CalciteTabNav': Components.CalciteTabNav;
    'CalciteTabTitle': Components.CalciteTabTitle;
    'CalciteTab': Components.CalciteTab;
    'CalciteTabs': Components.CalciteTabs;
  }

  interface StencilIntrinsicElements {
    'calcite-modal': Components.CalciteModalAttributes;
    'calcite-tab-nav': Components.CalciteTabNavAttributes;
    'calcite-tab-title': Components.CalciteTabTitleAttributes;
    'calcite-tab': Components.CalciteTabAttributes;
    'calcite-tabs': Components.CalciteTabsAttributes;
  }


  interface HTMLCalciteModalElement extends Components.CalciteModal, HTMLStencilElement {}
  var HTMLCalciteModalElement: {
    prototype: HTMLCalciteModalElement;
    new (): HTMLCalciteModalElement;
  };

  interface HTMLCalciteTabNavElement extends Components.CalciteTabNav, HTMLStencilElement {}
  var HTMLCalciteTabNavElement: {
    prototype: HTMLCalciteTabNavElement;
    new (): HTMLCalciteTabNavElement;
  };

  interface HTMLCalciteTabTitleElement extends Components.CalciteTabTitle, HTMLStencilElement {}
  var HTMLCalciteTabTitleElement: {
    prototype: HTMLCalciteTabTitleElement;
    new (): HTMLCalciteTabTitleElement;
  };

  interface HTMLCalciteTabElement extends Components.CalciteTab, HTMLStencilElement {}
  var HTMLCalciteTabElement: {
    prototype: HTMLCalciteTabElement;
    new (): HTMLCalciteTabElement;
  };

  interface HTMLCalciteTabsElement extends Components.CalciteTabs, HTMLStencilElement {}
  var HTMLCalciteTabsElement: {
    prototype: HTMLCalciteTabsElement;
    new (): HTMLCalciteTabsElement;
  };

  interface HTMLElementTagNameMap {
    'calcite-modal': HTMLCalciteModalElement
    'calcite-tab-nav': HTMLCalciteTabNavElement
    'calcite-tab-title': HTMLCalciteTabTitleElement
    'calcite-tab': HTMLCalciteTabElement
    'calcite-tabs': HTMLCalciteTabsElement
  }

  interface ElementTagNameMap {
    'calcite-modal': HTMLCalciteModalElement;
    'calcite-tab-nav': HTMLCalciteTabNavElement;
    'calcite-tab-title': HTMLCalciteTabTitleElement;
    'calcite-tab': HTMLCalciteTabElement;
    'calcite-tabs': HTMLCalciteTabsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
